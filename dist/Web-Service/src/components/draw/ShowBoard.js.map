{"version":3,"sources":["../../../../../Web-Service/src/components/draw/ShowBoard.js"],"names":["showBoard","props","state","ctx","mousePressed","lineValue","colorValue","beginX","beginY","endX","endY","visible","callback","setState","keyword","prop","propName","route","console","log","el","refs","myCanvas","ready","socket","that","getContext","hasProps","on","data","drawing","deviceHeight","deviceWidth","bingo","send","tip","clearArea","x","y","beginPath","strokeStyle","lineWidth","lineJoin","moveTo","lineTo","closePath","stroke","setTransform","clearRect","canvas","width","height","border","e","target","value","trim","emit","hide","bind"],"mappings":"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","file":"ShowBoard.js","sourcesContent":["import React,{Component} from 'react';\nimport '../draw/draw.less';\nimport '../draw/button.less';\n\nimport Rodal from 'rodal';\n\nimport 'rodal/src/rodal.css'\n\n\nlet showBoard = class ShowBoard extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            ctx : null,\n            mousePressed : false,\n            lineValue : 9,\n            colorValue : 'blue',\n            beginX: 0,\n            beginY: 0,\n            endX: 0,\n            endY: 0,\n            visible:false,\n            callback:'',\n        };\n    }\n    \n    hide(){\n        this.setState({visible:false,callback:'',keyword:''});\n    }\n    \n\n    hasProps(prop){\n        if(!prop){\n            return false\n        };\n\n        var propName;\n        if( this.props.route && this.props.route[prop] ){\n            propName = this.props.route[prop];\n        }\n\n        if (this.props[prop]) {\n            console.log('no route',this.props);\n            propName = this.props[prop];\n        }\n        \n        \n\n        if(propName){\n            return propName;\n        }\n        return false;\n    }\n\n    ready() {\n        var el = this.refs.myCanvas;\n        var ready,socket;\n        var that = this;\n\n        this.setState({\n            ctx : el.getContext(\"2d\")\n        });\n\n        ready = this.hasProps('ready');\n\n        if(ready){\n            socket = ready();\n            this.setState({\n                socket : socket\n            });\n            socket.on('showPath', (data)=>{\n                console.log(data);\n                this.drawing(\n                    data.endX,\n                    data.endY,\n                    data.beginX,\n                    data.beginY,\n                    data.colorValue,\n                    data.lineValue,\n                    data.deviceHeight,\n                    data.deviceWidth\n                );\n            });\n\n            // 监听答案是否正确\n            socket.on('answer', (data)=>{\n                switch (data.bingo) {\n                    case 1:\n                        // layer.open({\n                        //     content: '真棒答对了！'\n                        // });\n                        that.setState({visible:true,callback:'真棒答对了'});\n                        // alert('真棒答对了！');\n                        console.log(1);\n                        socket.send('success');\n                        break;\n                    case -1:\n                        // layer.open({\n                        //     content: '请输入答案！'\n                        // });                        \n                        // alert('请输入答案');\n                        that.setState({visible:true,callback:'请输入答案'});\n                        console.log(2);\n                        break;\n                    default:\n                        // layer.open({\n                        //     content: '你答错了，再发散下思维想想！'\n                        // });\n                        // alert('愚蠢的地球人！');\n                        that.setState({visible:true,callback:'你答错了，再发散下思维想想！('+data.tip+')'});\n                        console.log(3);\n                        \n                }\n            });\n            //清除画布\n            socket.on('showBoardClearArea', ()=>{\n                this.clearArea();\n            });\n            \n            socket.on('successClearArea',()=>{\n                this.clearArea();\n            })\n        }\n    }\n\n    drawing(x, y, beginX, beginY, colorValue, lineValue,deviceWidth,deviceHeight) {\n        var deviceWidth = deviceWidth;\n        var deviceHeight = deviceHeight;\n        var ctx = this.state.ctx;\n        ctx.beginPath();\n        ctx.strokeStyle = colorValue;\n        ctx.lineWidth = lineValue;\n        ctx.lineJoin = \"round\";\n        ctx.moveTo(beginX, beginY);\n        ctx.lineTo(x, y);\n        ctx.closePath();\n        ctx.stroke();\n    }\n\n    clearArea() {\n        var ctx = this.state.ctx;\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    }\n\n    componentDidMount(){\n        this.ready();\n    }\n\n    render(){\n        return (\n            <div className=\"control-ops\">\n                <div className=\"item keyword\">猜猜这家伙画的是啥！</div>\n                <canvas className=\"canvas\" ref=\"myCanvas\"\n                        width=\"500\"\n                        height=\"400\"\n                        style={{border:'1px solid #ccc'}}>\n                </canvas>\n                <div className=\"keyword\">\n                    <input type=\"text\" className=\"keywordInput\" value={this.state.keyword} onChange={(e)=>{ this.setState({ keyword : e.target.value.trim() }) }} />\n                    <input type=\"button\" value=\"我猜！\" className=\"button button-glow button-rounded button-primary button-tiny\" onClick={()=>this.state.socket.emit('submit', this.state.keyword)} />\n                </div>\n\n                <Rodal visible={this.state.visible} onClose={this.hide.bind(this)} animation=\"flip\">\n                    <div className=\"header\">提示</div>\n                    <div className=\"body\">{this.state.callback}</div>\n                    <button className=\"rodal-confirm-btn\" onClick={this.hide.bind(this)}>确定</button>\n                    \n                </Rodal>\n\n                \n            </div>\n        );\n    }\n};\nexport default showBoard\n"]}