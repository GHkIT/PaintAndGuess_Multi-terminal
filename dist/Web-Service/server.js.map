{"version":3,"sources":["../../Web-Service/server.js"],"names":["path","require","express","webpack","config","app","server","createServer","io","compiler","keyword","KEYWORD","use","static","join","__dirname","noInfo","publicPath","output","get","req","res","sendFile","on","socket","data","broadcast","emit","message","Math","floor","random","length","sockets","bingo","console","log","toLocaleLowerCase","listen","err"],"mappings":";;AAAA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;AACA,IAAIC,UAAUD,QAAQ,SAAR,CAAd;AACA,IAAIE,UAAUF,QAAQ,SAAR,CAAd;AACA,IAAIG,SAASH,QAAQ,kBAAR,CAAb;AACA,IAAII,MAAMH,SAAV;AACA,IAAII,SAASL,QAAQ,MAAR,EAAgBM,YAAhB,CAA6BF,GAA7B,CAAb;AACA,IAAIG,KAAKP,QAAQ,WAAR,EAAqBK,MAArB,CAAT;AACA,IAAIG,WAAWN,QAAQC,MAAR,CAAf;;AAEA,IAAIM,UAAU,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,GAAlB,EAAuB,IAAvB,EAA6B,GAA7B,CAAd;AAAA,IAAiDC,OAAjD;;AAEAN,IAAIO,GAAJ,CAAQV,QAAQW,MAAR,CAAeb,KAAKc,IAAL,CAAUC,SAAV,EAAqB,GAArB,CAAf,CAAR;AACI;AACJV,IAAIO,GAAJ,CAAQX,QAAQ,wBAAR,EAAkCQ,QAAlC,EAA4C;AAChDO,YAAQ,IADwC;AAEhDC,gBAAYb,OAAOc,MAAP,CAAcD;AAFsB,CAA5C,CAAR;AAIAZ,IAAIO,GAAJ,CAAQX,QAAQ,wBAAR,EAAkCQ,QAAlC,CAAR;;AAEA;AACA;;AAEAJ,IAAIc,GAAJ,CAAQ,GAAR,EAAa,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC5BA,QAAIC,QAAJ,CAAatB,KAAKc,IAAL,CAAUC,SAAV,EAAqB,YAArB,CAAb;AACH,CAFD;;AAIA;AACAP,GAAGe,EAAH,CAAM,YAAN,EAAoB,UAASC,MAAT,EAAiB;AACjC;;;;;;;;;;;;;;;AAeAA,WAAOD,EAAP,CAAU,UAAV,EAAsB,UAASE,IAAT,EAAe;AACjC;;;;;;;;;;AAUAD,eAAOE,SAAP,CAAiBC,IAAjB,CAAsB,UAAtB,EAAkCF,IAAlC;AACH,KAZD;;AAgBA;AACAD,WAAOD,EAAP,CAAU,SAAV,EAAqB,UAASK,OAAT,EAAiB;AAClC;AACA,YAAGA,WAAW,YAAd,EAA2B;AACvBjB,sBAAUD,QAAQmB,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBrB,QAAQsB,MAAnC,CAAR,CAAV;AACA;AACAR,mBAAOG,IAAP,CAAY,SAAZ,EAAuBhB,OAAvB;;AAEJ;AACC,SAND,MAMM,IAAGiB,WAAW,OAAd,EAAsB;AACxB;AACApB,eAAGyB,OAAH,CAAWN,IAAX,CAAgB,oBAAhB;AACA;AAEH;AACJ,KAdD;;AAkBA;;;;;;AAMAH,WAAOD,EAAP,CAAU,QAAV,EAAoB,UAASb,OAAT,EAAkB;AAClC;AACA,YAAIwB,QAAQ,CAAZ;AACA;AACAC,gBAAQC,GAAR,CAAY1B,OAAZ;AACA,YAAGA,WAAWC,OAAd,EAAsB;AAClB,gBAAIA,QAAQ0B,iBAAR,MAA+B3B,QAAQ2B,iBAAR,EAAnC,EAAgE;AAC5DH,wBAAQ,CAAR;AACH;AACJ,SAJD,MAIK;AACDA,oBAAQ,CAAC,CAAT;AACH;AACDC,gBAAQC,GAAR,CAAYF,KAAZ;;AAEA;AACAV,eAAOG,IAAP,CAAY,QAAZ,EAAsB;AAClBO,mBAAMA;AADY,SAAtB;AAGH,KAlBD;;AAsBAV,WAAOD,EAAP,CAAU,YAAV,EAAwB,YAAW,CAAE,CAArC;AACH,CAhFD;;AAkFAjB,OAAOgC,MAAP,CAAc,IAAd,EAAoB,WAApB,EAAiC,UAASC,GAAT,EAAc;AAC3C,QAAIA,GAAJ,EAAS;AACL,eAAOJ,QAAQC,GAAR,CAAYG,GAAZ,CAAP;AACH;AACDJ,YAAQC,GAAR,CAAY,oCAAZ;AACH,CALD","file":"server.js","sourcesContent":["var path = require('path');\nvar express = require('express');\nvar webpack = require('webpack');\nvar config = require('./webpack.config');\nvar app = express();\nvar server = require('http').createServer(app);\nvar io = require('socket.io')(server);\nvar compiler = webpack(config);\n\nvar keyword = ['猫', '大象', '飞机', '钱', '炸弹', '猪'], KEYWORD;\n\napp.use(express.static(path.join(__dirname, '/')));\n    //use in webpack development mode\napp.use(require('webpack-dev-middleware')(compiler, {\n    noInfo: true,\n    publicPath: config.output.publicPath\n}));\napp.use(require('webpack-hot-middleware')(compiler));\n\n//use in webpack production mode\n//app.use(express.static(__dirname));\n\napp.get('/', function(req, res) {\n    res.sendFile(path.join(__dirname, 'index.html'));\n});\n\n// socket监听的事件\nio.on('connection', function(socket) {\n    /**\n     * 画者事件 drawPath\n     * 传入JSON：data\n     * 例：\n     *  {\n            beginX: 68\n            beginY: 182\n            colorValue: \"red\"\n            deviceHeight: 400\n            deviceWidth: 500\n            endX: 74\n            endY: 181\n            lineValue: 3\n     *  }\n     */\n    socket.on('drawPath', function(data) {\n        /**\n         * 广播事件 showPath\n         * 将画者事件接收的data数据，向连接到socket服务器的客户端(猜者)进行广播\n         * 例：\n         * socket.on('showPath', (data)=>{\n                // 自定义画的方法\n                this.drawing({json});\n            });\n         * \n         */\n        socket.broadcast.emit('showPath', data);\n    });\n\n\n\n    // 监听客户端的socket.send(message)方法\n    socket.on('message', function(message){\n        // 画者生成一个随机的关键字\n        if(message == 'getKeyWord'){\n            KEYWORD = keyword[Math.floor(Math.random() * keyword.length)];\n            // 将生成的关键字发送到画者的客户端\n            socket.emit('keyword', KEYWORD);\n            \n        // 画者清空画布 socket.send('clear')    \n        }else if(message == 'clear'){\n            // 猜者端清空画布\n            io.sockets.emit('showBoardClearArea');\n            // socket.emit('showBoardClearArea');\n            \n        }\n    }); \n    \n    \n    \n    /**\n     * 猜者提交 submit\n     * 传入str: keyword\n     * \n     * this.state.socket.emit('submit', keyword)}\n     */\n    socket.on('submit', function(keyword) {\n        // 标志位\n        var bingo = 0;\n        // 如果\n        console.log(keyword);\n        if(keyword && KEYWORD){\n            if (KEYWORD.toLocaleLowerCase() == keyword.toLocaleLowerCase()) {\n                bingo = 1;\n            }\n        }else{\n            bingo = -1;\n        }\n        console.log(bingo);\n\n        // 将flag标志位传到连接的客户端\n        socket.emit('answer', {\n            bingo:bingo\n        });\n    });\n\n\n\n    socket.on('disconnect', function() {});\n});\n\nserver.listen(3007, 'localhost', function(err) {\n    if (err) {\n        return console.log(err);\n    }\n    console.log('Listening at http://localhost:3007');\n});\n"]}